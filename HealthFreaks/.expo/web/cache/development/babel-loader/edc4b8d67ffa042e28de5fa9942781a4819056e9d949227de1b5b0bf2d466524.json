{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction BMICalc() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    height = _useState2[0],\n    setHeight = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    weight = _useState4[0],\n    setWeight = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    bmi = _useState6[0],\n    setBMI = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    bmiResult = _useState8[0],\n    setBMIResult = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    metricUnits = _useState10[0],\n    setUnits = _useState10[1];\n  function calculate(height, weight) {\n    var result;\n    if (metricUnits) {\n      var tempHeight = parseFloat(height) / 100.0;\n      result = parseFloat(weight) / tempHeight ** 2;\n    } else {\n      result = 703 * parseFloat(weight) / parseFloat(height) ** 2;\n    }\n    setBMI(result.toFixed(2));\n    if (result < 18.5) {\n      setBMIResult('Underweight');\n    } else if (result >= 18.5 && result < 25) {\n      setBMIResult('Normal weight');\n    } else if (result >= 25 && result < 30) {\n      setBMIResult('Overweight');\n    } else if (result >= 30) {\n      setBMIResult('Obese');\n    } else {\n      alert('Incorrect Input!');\n      setBMIResult('');\n    }\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"BMI Calculator\"\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Height\"\n    }), _jsxs(View, {\n      style: [styles.inputField, {\n        padding: 0\n      }],\n      children: [_jsx(TextInput, {\n        style: styles.inputToggle,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Height\",\n        placeholderTextColor: '#999',\n        autoCapitalize: \"none\",\n        onChangeText: setHeight\n      }), _jsx(Pressable, {\n        onPress: function onPress() {\n          return setUnits(!metricUnits);\n        },\n        children: _jsx(Text, {\n          style: styles.inputToggle,\n          children: metricUnits ? 'cm' : 'in'\n        })\n      })]\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Weight\"\n    }), _jsxs(View, {\n      style: [styles.inputField, {\n        padding: 0\n      }],\n      children: [_jsx(TextInput, {\n        style: styles.inputToggle,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Weight\",\n        placeholderTextColor: '#999',\n        autoCapitalize: \"none\",\n        onChangeText: setWeight\n      }), _jsx(Pressable, {\n        onPress: function onPress() {\n          return setUnits(!metricUnits);\n        },\n        children: _jsx(Text, {\n          style: styles.inputToggle,\n          children: metricUnits ? 'kg' : 'lbs'\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.submitButton,\n      onPress: function onPress() {\n        calculate(height, weight);\n      },\n      children: _jsx(Text, {\n        style: styles.submitButtonText,\n        children: \" Calculate \"\n      })\n    }), _jsx(Text, {\n      style: styles.output,\n      children: bmi\n    }), _jsx(Text, {\n      style: styles.resultText,\n      children: bmiResult\n    })]\n  });\n}\nexport default BMICalc;\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 23,\n    marginHorizontal: 20,\n    rowGap: 8\n  },\n  inputField: {\n    borderWidth: 1,\n    padding: 10,\n    flexDirection: 'row',\n    fontSize: 20\n  },\n  inputToggle: {\n    flex: 1,\n    padding: 10,\n    fontSize: 20\n  },\n  submitButton: {\n    backgroundColor: '#ff6666',\n    padding: 10,\n    marginVertical: 15,\n    height: 40\n  },\n  submitButtonText: {\n    textAlign: \"center\",\n    color: 'white',\n    fontSize: 18\n  },\n  output: {\n    textAlign: \"center\",\n    fontSize: 30\n  },\n  title: {\n    paddingTop: 30,\n    paddingBottom: 10,\n    textAlign: \"center\",\n    fontSize: 30,\n    fontWeight: \"bold\"\n  },\n  resultText: {\n    paddingTop: 20,\n    paddingBottom: 10,\n    textAlign: \"center\",\n    fontSize: 30,\n    color: 'blue'\n  },\n  label: {\n    fontSize: 20\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","TextInput","StyleSheet","Pressable","jsx","_jsx","jsxs","_jsxs","BMICalc","_useState","_useState2","_slicedToArray","height","setHeight","_useState3","_useState4","weight","setWeight","_useState5","_useState6","bmi","setBMI","_useState7","_useState8","bmiResult","setBMIResult","_useState9","_useState10","metricUnits","setUnits","calculate","result","tempHeight","parseFloat","toFixed","alert","style","styles","container","children","title","label","inputField","padding","inputToggle","underlineColorAndroid","placeholder","placeholderTextColor","autoCapitalize","onChangeText","onPress","submitButton","submitButtonText","output","resultText","create","paddingTop","marginHorizontal","rowGap","borderWidth","flexDirection","fontSize","flex","backgroundColor","marginVertical","textAlign","color","paddingBottom","fontWeight"],"sources":["C:/Users/autum/HealthFreaks/HealthFreaks/HealthFreaks/app/screens/BMICalc.tsx"],"sourcesContent":["import React, { Component, useState } from 'react'\r\nimport { View, Text, TouchableOpacity, TextInput, StyleSheet, Pressable } from 'react-native'\r\n \r\nfunction BMICalc() {\r\n   const [height, setHeight] = useState('');\r\n   const [weight, setWeight] = useState('');\r\n   const [bmi, setBMI] = useState('');\r\n   const [bmiResult, setBMIResult] = useState('');\r\n   const [metricUnits, setUnits] = useState(true);\r\n\r\n   function calculate(height: string, weight: string) {\r\n      //calculation\r\n      var result;\r\n      if (metricUnits) {   //using metric units\r\n         let tempHeight = parseFloat(height) / 100.0           //convert cm to m\r\n         result = (parseFloat(weight) / (tempHeight ** 2));    //bmi = weight / (height^2)\r\n      } else {             //using imperial units\r\n         result = ((703 * parseFloat(weight)) / (parseFloat(height) ** 2));   //bmi = (703 * weight) / (height^2)\r\n      }\r\n      //display result\r\n      setBMI(result.toFixed(2));\r\n      if (result < 18.5) {\r\n         setBMIResult('Underweight');\r\n      }\r\n      else if (result >= 18.5 && result < 25) {\r\n         setBMIResult('Normal weight');\r\n      }\r\n      else if (result >= 25 && result < 30) {\r\n         setBMIResult('Overweight');\r\n      }\r\n      else if (result >= 30) {\r\n         setBMIResult('Obese');\r\n      }\r\n      else {\r\n         alert('Incorrect Input!');\r\n         setBMIResult('');\r\n      }\r\n   }\r\n   return (\r\n      <View style={styles.container}>\r\n         <Text style={styles.title}>BMI Calculator</Text>\r\n\r\n         <Text style={styles.label}>Height</Text>\r\n         <View style={[styles.inputField, { padding: 0 }]}>\r\n            <TextInput style={styles.inputToggle}\r\n               underlineColorAndroid=\"transparent\"\r\n               placeholder=\"Height\"\r\n               placeholderTextColor={'#999'}\r\n               autoCapitalize=\"none\"\r\n               onChangeText={setHeight} />\r\n            <Pressable onPress={() => setUnits(!metricUnits)}>\r\n               <Text style={styles.inputToggle}>{metricUnits ? 'cm' : 'in'}</Text>\r\n            </Pressable>\r\n         </View>\r\n         <Text style={styles.label}>Weight</Text>\r\n         <View style={[styles.inputField, { padding: 0 }]}>\r\n            <TextInput style={styles.inputToggle}\r\n               underlineColorAndroid=\"transparent\"\r\n               placeholder=\"Weight\"\r\n               placeholderTextColor={'#999'}\r\n               autoCapitalize=\"none\"\r\n               onChangeText={setWeight} />\r\n            <Pressable onPress={() => setUnits(!metricUnits)}>\r\n               <Text style={styles.inputToggle}>{metricUnits ? 'kg' : 'lbs'}</Text>\r\n            </Pressable>\r\n         </View>\r\n         <TouchableOpacity style={styles.submitButton} onPress={() => { calculate(height, weight); }}>\r\n            <Text style={styles.submitButtonText}> Calculate </Text>\r\n         </TouchableOpacity>\r\n         <Text style={styles.output}>{bmi}</Text>\r\n         <Text style={styles.resultText}>{bmiResult}</Text>\r\n      </View>\r\n   )\r\n}\r\nexport default BMICalc;\r\n\r\nconst styles = StyleSheet.create({\r\n   container: {\r\n      paddingTop: 23,\r\n      marginHorizontal: 20,\r\n      rowGap: 8,\r\n   },\r\n   inputField: {\r\n      //margin: 15,\r\n      //height: 40,\r\n      borderWidth: 1,\r\n      padding: 10,\r\n      flexDirection: 'row',\r\n      fontSize: 20,\r\n   },\r\n   inputToggle: {\r\n      flex: 1,\r\n      padding: 10,\r\n      fontSize: 20,\r\n   },\r\n   submitButton: {\r\n      backgroundColor: '#ff6666',\r\n      padding: 10,\r\n      marginVertical: 15,\r\n      height: 40,\r\n   },\r\n   submitButtonText: {\r\n      textAlign: \"center\",\r\n      color: 'white',\r\n      // fontWeight:\"bold\",\r\n      fontSize: 18,\r\n   },\r\n   output: {\r\n      textAlign: \"center\",\r\n      fontSize: 30,\r\n   },\r\n   title: {\r\n      paddingTop: 30,\r\n      paddingBottom: 10,\r\n      textAlign: \"center\",\r\n      fontSize: 30,\r\n      fontWeight: \"bold\",\r\n   },\r\n   resultText: {\r\n      paddingTop: 20,\r\n      paddingBottom: 10,\r\n      textAlign: \"center\",\r\n      fontSize: 30,\r\n      color: 'blue'\r\n   },\r\n   label: {\r\n      //marginLeft: 15,\r\n      fontSize: 20,\r\n   }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}