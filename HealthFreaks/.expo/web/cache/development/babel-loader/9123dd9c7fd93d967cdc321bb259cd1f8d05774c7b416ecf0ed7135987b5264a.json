{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport React, { useState } from 'react';\nimport { FIREBASE_AUTH } from \"../../FireBaseConfig\";\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword } from 'firebase/auth';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Login = function Login() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    SetPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    hidePassword = _useState8[0],\n    setHidePassword = _useState8[1];\n  var auth = FIREBASE_AUTH;\n  var signIn = function () {\n    var _ref = _asyncToGenerator(function* () {\n      setLoading(true);\n      try {\n        var response = yield signInWithEmailAndPassword(auth, email, password);\n        console.log(response);\n      } catch (error) {\n        console.log(error);\n        alert('Sign in failed: ' + error.message);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function signIn() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var signUp = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setLoading(true);\n      try {\n        var response = yield createUserWithEmailAndPassword(auth, email, password);\n        alert('Check your emails!');\n        console.log(response);\n      } catch (error) {\n        console.log(error);\n        alert('Sign in failed: ' + error.message);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function signUp() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ImageBackground, {\n      source: require(\"../../assets/BACKGROUND.png\"),\n      resizeMode: \"cover\",\n      style: styles.image,\n      children: _jsxs(KeyboardAvoidingView, {\n        behavior: \"padding\",\n        style: {\n          marginHorizontal: 20\n        },\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Health Freaks\"\n        }), _jsx(TextInput, {\n          value: email,\n          style: styles.inputField,\n          placeholder: \"Email\",\n          placeholderTextColor: \"#999\",\n          autoCapitalize: \"none\",\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          }\n        }), _jsxs(View, {\n          style: [styles.inputField, {\n            padding: 0\n          }],\n          children: [_jsx(TextInput, {\n            secureTextEntry: hidePassword,\n            value: password,\n            style: styles.inputToggle,\n            placeholder: \"Password\",\n            placeholderTextColor: \"#999\",\n            autoCapitalize: \"none\",\n            onChangeText: function onChangeText(text) {\n              return SetPassword(text);\n            }\n          }), _jsx(Ionicons, {\n            name: hidePassword ? 'eye-off' : 'eye',\n            size: 32,\n            style: {\n              alignSelf: 'center',\n              padding: 4\n            },\n            onPress: function onPress() {\n              setHidePassword(!hidePassword);\n            }\n          })]\n        }), loading ? _jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"#0000ff\"\n        }) : _jsx(_Fragment, {\n          children: _jsxs(View, {\n            style: {\n              marginTop: 32,\n              flexDirection: 'column',\n              rowGap: 10\n            },\n            children: [_jsx(Button, {\n              title: \"Login\",\n              onPress: signIn\n            }), _jsx(Button, {\n              title: \"Create Account\",\n              onPress: signUp\n            })]\n          })\n        })]\n      })\n    })\n  });\n};\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    border: '2px solid white',\n    boxShadow: 'inset 0px 0px 10px rgba(FF, FF, FF, 0.9)'\n  },\n  inputField: {\n    marginVertical: 4,\n    height: 50,\n    width: '80%',\n    marginHorizontal: 'auto',\n    borderWidth: 1,\n    borderRadius: 4,\n    borderColor: 'white',\n    padding: 10,\n    backgroundColor: 'rgba(75, 75, 75, 0.3)',\n    color: 'violet',\n    flexDirection: 'row',\n    fontSize: 20,\n    boxShadow: '0 0 20px #FFFFFF',\n    shadowColor: 'white',\n    shadowRadius: 20\n  },\n  inputToggle: {\n    fontSize: 20,\n    flex: 1,\n    padding: 10,\n    borderRadius: 4,\n    borderColor: 'white',\n    color: 'violet'\n  },\n  title: {\n    fontSize: 32,\n    textAlign: 'center',\n    marginBottom: 32,\n    color: 'deeppink'\n  },\n  image: {\n    flex: 1,\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","FIREBASE_AUTH","signInWithEmailAndPassword","createUserWithEmailAndPassword","Ionicons","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Login","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","SetPassword","_useState5","_useState6","loading","setLoading","_useState7","_useState8","hidePassword","setHidePassword","auth","signIn","_ref","_asyncToGenerator","response","console","log","error","alert","message","apply","arguments","signUp","_ref2","View","style","styles","container","children","ImageBackground","source","require","resizeMode","image","KeyboardAvoidingView","behavior","marginHorizontal","Text","title","TextInput","value","inputField","placeholder","placeholderTextColor","autoCapitalize","onChangeText","text","padding","secureTextEntry","inputToggle","name","size","alignSelf","onPress","ActivityIndicator","color","marginTop","flexDirection","rowGap","Button","StyleSheet","create","flex","justifyContent","border","boxShadow","marginVertical","height","width","borderWidth","borderRadius","borderColor","backgroundColor","fontSize","shadowColor","shadowRadius","textAlign","marginBottom"],"sources":["C:/Users/autum/HealthFreaks/HealthFreaks/HealthFreaks/app/screens/Login.tsx"],"sourcesContent":["import { View, Text, StyleSheet, Button, TextInput, KeyboardAvoidingView, ActivityIndicator, ImageBackground } from 'react-native';\r\nimport React, { useState } from 'react';\r\nimport { FIREBASE_AUTH } from '../../FireBaseConfig';\r\nimport { Auth, signInWithEmailAndPassword, createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport Ionicons from '@expo/vector-icons/Ionicons';\r\nimport { useFonts } from 'expo-font';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');         //email text entry current state\r\n    const [password, SetPassword] = useState('');   //password text entry current state\r\n    const [loading, setLoading] = useState(false);  //loading state\r\n    const [hidePassword, setHidePassword] = useState(true); //password entry visibility state\r\n    const auth = FIREBASE_AUTH;\r\n    //const [fontsLoaded] = useFonts({\r\n    //    'street-soul': require('../resources/street soul.tff'),\r\n    //});\r\n\r\n\r\n    const signIn = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await signInWithEmailAndPassword(auth, email, password);\r\n            console.log(response);\r\n        } catch (error: any) {\r\n            console.log(error);\r\n            alert('Sign in failed: ' + error.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const signUp = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await createUserWithEmailAndPassword(auth, email, password);\r\n            alert('Check your emails!');\r\n            console.log(response);\r\n        } catch (error: any) {\r\n            console.log(error);\r\n            alert('Sign in failed: ' + error.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <ImageBackground source={require('../../assets/BACKGROUND.png')} resizeMode='cover' style={styles.image}>\r\n                <KeyboardAvoidingView behavior='padding' style={{ marginHorizontal: 20 }}>\r\n                    <Text style={styles.title}>Health Freaks</Text>\r\n                    <TextInput value={email} style={styles.inputField} placeholder=\"Email\" placeholderTextColor='#999' autoCapitalize='none' onChangeText={(text) => setEmail(text)}></TextInput>\r\n                    <View style={[styles.inputField, { padding: 0 }]}>\r\n                        <TextInput secureTextEntry={hidePassword} value={password} style={styles.inputToggle} placeholder=\"Password\" placeholderTextColor='#999' autoCapitalize='none' onChangeText={(text) => SetPassword(text)}></TextInput>\r\n                        <Ionicons name={hidePassword ? 'eye-off' : 'eye'} size={32} style={{ alignSelf: 'center', padding: 4 }} onPress={() => { setHidePassword(!hidePassword) }} />\r\n                    </View>\r\n                    {loading ? <ActivityIndicator size=\"large\" color=\"#0000ff\" />\r\n                        : <>\r\n                            <View style={{ marginTop: 32, flexDirection: 'column', rowGap: 10 }}>\r\n                                <Button title=\"Login\" onPress={signIn} />\r\n                                <Button title=\"Create Account\" onPress={signUp} />\r\n                            </View>\r\n                        </>}\r\n                </KeyboardAvoidingView>\r\n            </ImageBackground>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        //marginHorizontal: 20,\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        border: '2px solid white',\r\n        boxShadow: 'inset 0px 0px 10px rgba(FF, FF, FF, 0.9)',\r\n        \r\n    },\r\n    inputField: {\r\n        marginVertical: 4,\r\n        height: 50,\r\n        width: '80%',\r\n        marginHorizontal: 'auto',\r\n        borderWidth: 1,\r\n        borderRadius: 4,\r\n        borderColor: 'white',\r\n        padding: 10,\r\n        backgroundColor: 'rgba(75, 75, 75, 0.3)',\r\n        color: 'violet',\r\n        flexDirection: 'row',\r\n        fontSize: 20,\r\n        boxShadow: '0 0 20px #FFFFFF',\r\n        shadowColor: 'white',\r\n        shadowRadius: 20,\r\n    },\r\n    inputToggle: {\r\n        fontSize: 20,\r\n        flex: 1,\r\n        padding: 10,\r\n        borderRadius: 4,\r\n        borderColor: 'white',\r\n        color: 'violet',\r\n    },\r\n    //@FontFace: {  font-family: 'hitMePunk', src: URL(../../assets/Hit menubar, punk! 01.ttf),}\r\n\r\n    title: {\r\n        fontSize: 32,\r\n        textAlign: 'center',\r\n        marginBottom: 32,\r\n        color: 'deeppink',\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}