{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screen = Dimensions.get('window');\nvar formatNumber = function formatNumber(number) {\n  return `0${number}`.slice(-2);\n};\nvar getRemaining = function getRemaining(time) {\n  var mins = Math.floor(time / 60);\n  var secs = time - mins * 60;\n  return {\n    mins: formatNumber(mins),\n    secs: formatNumber(secs)\n  };\n};\nexport default function App() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    remainingSecs = _useState2[0],\n    setRemainingSecs = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isActive = _useState4[0],\n    setIsActive = _useState4[1];\n  var _getRemaining = getRemaining(remainingSecs),\n    mins = _getRemaining.mins,\n    secs = _getRemaining.secs;\n  var toggle = function toggle() {\n    setIsActive(!isActive);\n  };\n  var reset = function reset() {\n    setRemainingSecs(0);\n    setIsActive(false);\n  };\n  var useEffect = function useEffect(isActive, remainingSecs) {\n    var interval = null;\n    if (isActive) {\n      interval = setInterval(function () {\n        setRemainingSecs(function (remainingSecs) {\n          return remainingSecs + 1;\n        });\n      }, 1000);\n    } else if (!isActive && remainingSecs !== 0) {\n      clearInterval(interval);\n    }\n    return function () {\n      return clearInterval(interval);\n    };\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\"\n    }), _jsx(Text, {\n      style: styles.timerText,\n      children: `${mins}:${secs}`\n    }), _jsx(TouchableOpacity, {\n      onPress: toggle,\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: isActive ? 'Pause' : 'Start'\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: reset,\n      style: [styles.button, styles.buttonReset],\n      children: _jsx(Text, {\n        style: [styles.buttonText, styles.buttonTextReset],\n        children: \"Reset\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#07121B',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    borderWidth: 10,\n    borderColor: '#B9AAFF',\n    width: screen.width / 2,\n    height: screen.width / 2,\n    borderRadius: screen.width / 2,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    fontSize: 45,\n    color: '#B9AAFF'\n  },\n  timerText: {\n    color: '#fff',\n    fontSize: 90,\n    marginBottom: 20\n  },\n  buttonReset: {\n    marginTop: 20,\n    borderColor: \"#FF851B\"\n  },\n  buttonTextReset: {\n    color: \"#FF851B\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","StatusBar","TouchableOpacity","Dimensions","jsx","_jsx","jsxs","_jsxs","screen","get","formatNumber","number","slice","getRemaining","time","mins","Math","floor","secs","App","_useState","_useState2","_slicedToArray","remainingSecs","setRemainingSecs","_useState3","_useState4","isActive","setIsActive","_getRemaining","toggle","reset","interval","setInterval","clearInterval","style","styles","container","children","barStyle","timerText","onPress","button","buttonText","buttonReset","buttonTextReset","create","flex","backgroundColor","alignItems","justifyContent","borderWidth","borderColor","width","height","borderRadius","fontSize","color","marginBottom","marginTop"],"sources":["C:/Users/autum/HealthFreaks/HealthFreaks/HealthFreaks/app/screens/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, StatusBar, TouchableOpacity, Dimensions } from 'react-native';\r\n\r\nconst screen = Dimensions.get('window');\r\n\r\nconst formatNumber = number => `0${number}`.slice(-2);\r\n\r\nconst getRemaining = (time) => {\r\n    const mins = Math.floor(time / 60);\r\n    const secs = time - mins * 60;\r\n    return { mins: formatNumber(mins), secs: formatNumber(secs) };\r\n}\r\n\r\nexport default function App() {\r\n  const [remainingSecs, setRemainingSecs] = useState(0);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const { mins, secs } = getRemaining(remainingSecs);\r\n\r\n  const toggle = () => {\r\n    setIsActive(!isActive);\r\n  }\r\n\r\n  const reset = () => {\r\n    setRemainingSecs(0);\r\n    setIsActive(false);\r\n  }\r\n\r\n  const useEffect = (isActive, remainingSecs) => {\r\n    let interval = null;\r\n    if (isActive) {\r\n      interval = setInterval(() => {\r\n        setRemainingSecs(remainingSecs => remainingSecs + 1);\r\n      }, 1000);\r\n    } else if (!isActive && remainingSecs !== 0) {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  };\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar barStyle=\"light-content\" />\r\n      <Text style={styles.timerText}>{`${mins}:${secs}`}</Text>\r\n      <TouchableOpacity onPress={toggle} style={styles.button}>\r\n          <Text style={styles.buttonText}>{isActive ? 'Pause' : 'Start'}</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity onPress={reset} style={[styles.button, styles.buttonReset]}>\r\n          <Text style={[styles.buttonText, styles.buttonTextReset]}>Reset</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#07121B',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n      borderWidth: 10,\r\n      borderColor: '#B9AAFF',\r\n      width: screen.width / 2,\r\n      height: screen.width / 2,\r\n      borderRadius: screen.width / 2,\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n  },\r\n  buttonText: {\r\n      fontSize: 45,\r\n      color: '#B9AAFF'\r\n  },\r\n  timerText: {\r\n      color: '#fff',\r\n      fontSize: 90,\r\n      marginBottom: 20\r\n  },\r\n  buttonReset: {\r\n      marginTop: 20,\r\n      borderColor: \"#FF851B\"\r\n  },\r\n  buttonTextReset: {\r\n    color: \"#FF851B\"\r\n  }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}