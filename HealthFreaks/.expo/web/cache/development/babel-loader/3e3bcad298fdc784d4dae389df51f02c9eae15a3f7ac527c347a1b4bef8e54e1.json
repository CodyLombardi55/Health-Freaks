{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React, { useState } from 'react';\nimport { TextInput } from 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Profile() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    firstName = _useState2[0],\n    setFirstName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    lastName = _useState4[0],\n    setLastName = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    age = _useState6[0],\n    setAge = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    height = _useState8[0],\n    setHeight = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    weight = _useState10[0],\n    setWeight = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    sex = _useState12[0],\n    setSex = _useState12[1];\n  var _useState13 = useState(true),\n    _useState14 = _slicedToArray(_useState13, 2),\n    metricUnits = _useState14[0],\n    setUnits = _useState14[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(KeyboardAvoidingView, {\n      style: {\n        rowGap: 16\n      },\n      children: [_jsx(TextInput, {\n        value: firstName,\n        placeholder: \"First name\",\n        onChangeText: setFirstName,\n        placeholderTextColor: '#999',\n        style: styles.inputField\n      }), _jsx(TextInput, {\n        value: lastName,\n        placeholder: \"Last name\",\n        onChangeText: setLastName,\n        placeholderTextColor: '#999',\n        style: styles.inputField\n      }), _jsxs(View, {\n        style: [styles.inputField, {\n          padding: 0\n        }],\n        children: [_jsx(TextInput, {\n          value: age,\n          placeholder: \"Age\",\n          onChangeText: setAge,\n          placeholderTextColor: '#999',\n          style: styles.inputToggle,\n          keyboardType: \"number-pad\"\n        }), _jsx(Text, {\n          style: styles.inputToggle,\n          children: \"years\"\n        })]\n      }), _jsxs(View, {\n        style: [styles.inputField, {\n          padding: 0\n        }],\n        children: [_jsx(TextInput, {\n          value: height,\n          placeholder: \"Height\",\n          onChangeText: setHeight,\n          placeholderTextColor: '#999',\n          style: styles.inputToggle,\n          keyboardType: \"decimal-pad\"\n        }), _jsx(Pressable, {\n          onPress: function onPress() {\n            return setUnits(!metricUnits);\n          },\n          children: _jsx(Text, {\n            style: styles.inputToggle,\n            children: metricUnits ? 'cm' : 'in'\n          })\n        })]\n      }), _jsxs(View, {\n        style: [styles.inputField, {\n          padding: 0\n        }],\n        children: [_jsx(TextInput, {\n          value: weight,\n          placeholder: \"Weight\",\n          onChangeText: setWeight,\n          placeholderTextColor: '#999',\n          style: styles.inputToggle,\n          keyboardType: \"decimal-pad\"\n        }), _jsx(Pressable, {\n          onPress: function onPress() {\n            return setUnits(!metricUnits);\n          },\n          children: _jsx(Text, {\n            style: styles.inputToggle,\n            children: metricUnits ? 'kg' : 'lbs'\n          })\n        })]\n      }), _jsx(TextInput, {\n        value: sex,\n        placeholder: \"Sex\",\n        onChangeText: setSex,\n        placeholderTextColor: '#999',\n        style: styles.inputField\n      })]\n    }), _jsx(Button, {\n      title: \"Save\",\n      onPress: function onPress() {\n        console.log('profile settings saved');\n        alert('Profile saved');\n      }\n    })]\n  });\n}\nexport default Profile;\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 20,\n    flex: 1,\n    justifyContent: 'center',\n    rowGap: 16\n  },\n  inputField: {\n    borderWidth: 1,\n    borderRadius: 4,\n    padding: 10,\n    fontSize: 20,\n    flexDirection: 'row'\n  },\n  inputToggle: {\n    fontSize: 20,\n    flex: 1,\n    padding: 10,\n    borderRadius: 4\n  }\n});","map":{"version":3,"names":["React","useState","TextInput","jsx","_jsx","jsxs","_jsxs","Profile","_useState","_useState2","_slicedToArray","firstName","setFirstName","_useState3","_useState4","lastName","setLastName","_useState5","_useState6","age","setAge","_useState7","_useState8","height","setHeight","_useState9","_useState10","weight","setWeight","_useState11","_useState12","sex","setSex","_useState13","_useState14","metricUnits","setUnits","View","style","styles","container","children","KeyboardAvoidingView","rowGap","value","placeholder","onChangeText","placeholderTextColor","inputField","padding","inputToggle","keyboardType","Text","Pressable","onPress","Button","title","console","log","alert","StyleSheet","create","marginHorizontal","flex","justifyContent","borderWidth","borderRadius","fontSize","flexDirection"],"sources":["C:/Users/autum/HealthFreaks/HealthFreaks/HealthFreaks/app/screens/Profile.tsx"],"sourcesContent":["import { View, Text, StyleSheet, KeyboardAvoidingView, Button, Pressable } from 'react-native';\r\nimport React, { useState } from 'react';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\n\r\nfunction Profile() {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [height, setHeight] = useState('');\r\n    const [weight, setWeight] = useState('');\r\n    const [sex, setSex] = useState('');\r\n    const [metricUnits, setUnits] = useState(true)\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <KeyboardAvoidingView style={{ rowGap: 16 }}>\r\n                <TextInput\r\n                    value={firstName}\r\n                    placeholder='First name'\r\n                    onChangeText={setFirstName}\r\n                    placeholderTextColor={'#999'}\r\n                    style={styles.inputField}\r\n                />\r\n                <TextInput\r\n                    value={lastName}\r\n                    placeholder='Last name'\r\n                    onChangeText={setLastName}\r\n                    placeholderTextColor={'#999'}\r\n                    style={styles.inputField}\r\n                />\r\n                <View style={[styles.inputField, { padding: 0 }]}>\r\n                    <TextInput\r\n                        value={age}\r\n                        placeholder='Age'\r\n                        onChangeText={setAge}\r\n                        placeholderTextColor={'#999'}\r\n                        style={styles.inputToggle}\r\n                        keyboardType='number-pad'\r\n                    />\r\n                    <Text style={styles.inputToggle}>years</Text>\r\n                </View>\r\n                <View style={[styles.inputField, { padding: 0 }]}>\r\n                    <TextInput\r\n                        value={height}\r\n                        placeholder='Height'\r\n                        onChangeText={setHeight}\r\n                        placeholderTextColor={'#999'}\r\n                        style={styles.inputToggle}\r\n                        keyboardType='decimal-pad'\r\n                    />\r\n                    <Pressable onPress={() => setUnits(!metricUnits)}>\r\n                        <Text style={styles.inputToggle}>{metricUnits ? 'cm' : 'in'}</Text>\r\n                    </Pressable>\r\n                </View>\r\n                <View style={[styles.inputField, { padding: 0 }]}>\r\n                    <TextInput\r\n                        value={weight}\r\n                        placeholder='Weight'\r\n                        onChangeText={setWeight}\r\n                        placeholderTextColor={'#999'}\r\n                        style={styles.inputToggle}\r\n                        keyboardType='decimal-pad'\r\n                    />\r\n                    <Pressable onPress={() => setUnits(!metricUnits)}>\r\n                        <Text style={styles.inputToggle}>{metricUnits ? 'kg' : 'lbs'}</Text>\r\n                    </Pressable>\r\n                </View>\r\n                <TextInput\r\n                    value={sex}\r\n                    placeholder='Sex'\r\n                    onChangeText={setSex}\r\n                    placeholderTextColor={'#999'}\r\n                    style={styles.inputField}\r\n                />\r\n            </KeyboardAvoidingView>\r\n            <Button\r\n                title='Save'\r\n                onPress={() => {\r\n                    console.log('profile settings saved');\r\n                    alert('Profile saved');\r\n                }}\r\n            />\r\n        </View>\r\n    )\r\n}\r\nexport default Profile;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginHorizontal: 20,\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        rowGap: 16,\r\n    },\r\n    inputField: {\r\n        borderWidth: 1,\r\n        borderRadius: 4,\r\n        padding: 10,\r\n        fontSize: 20,\r\n        flexDirection: 'row',\r\n    },\r\n    inputToggle: {\r\n        fontSize: 20,\r\n        flex: 1,\r\n        padding: 10,\r\n        borderRadius: 4,\r\n    },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}